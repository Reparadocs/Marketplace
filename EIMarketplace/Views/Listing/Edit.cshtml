@model EIMarketplace.Models.Listing

@{
    ViewBag.Title = "Edit";
}


@section Banner{
             @Html.ActionLink("Home", "Index", "Home", new {}, new { @class = "navbar-brand" })
            @Html.ActionLink("Directory", "Search", "Listing", new {},new { @class = "navbar-brand" })
            <li class="dropdown active">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown">My Listings<b class="caret"></b></a>
              <ul class="dropdown-menu">
                <li>@Html.ActionLink("My Listings", "Index", "Listing")</li>
                <li>@Html.ActionLink("My Account", "Manage", "Account")</li>
                <li class="divider"></li>
                 <li>@Html.ActionLink("Log Off", "LogOff", "Account")</li>
              </ul>
            </li>
            <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown">Create<b class="caret"></b></a>
              <ul class="dropdown-menu">
                <li>@Html.ActionLink("Freelancer Listing", "CreateFreelancer", "Listing")</li>
                <li>@Html.ActionLink("Startup Listing", "CreateStartup", "Listing")</li>
              </ul>
            </li>
    }

<hgroup class="title">
    <h1>@ViewBag.Title</h1>
</hgroup>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Listing</legend>

        @Html.HiddenFor(model => model.ID)
        <div class="clisting">
        <ol>
            <li>
                @Html.LabelFor(m => m.Type)
                @Html.RadioButtonFor(m => m.Type, EIMarketplace.Models.ListingType.Freelancer) Freelancer
            </li>
            <li>
                @Html.RadioButtonFor(m => m.Type, EIMarketplace.Models.ListingType.Startup) Startup
            </li>
            <li>
                @Html.LabelFor(m => m.Title)
                @Html.TextBoxFor(m => m.Title)
                @Html.ValidationMessageFor(m => m.Title)
            </li>
            <li>
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { cols = 80, @rows = 5 })
                @Html.ValidationMessageFor(m => m.Description)
            </li>
            <li>
                @Html.LabelFor(m => m.Payment)
                @Html.TextBoxFor(m => m.Payment)
                @Html.ValidationMessageFor(m => m.Payment)
            </li>
            @*
            <li>
                @Html.LabelFor(m => m.ExpirationDate)
                @Html.TextBoxFor(m => m.ExpirationDate)
                @Html.ValidationMessageFor(m => m.ExpirationDate)
            </li>
            <li>
                @Html.LabelFor(m => m.AcceptType)
                @Html.DropDownListFor(model => model.AcceptType, new SelectList(Enum.GetValues(typeof(EIMarketplace.Models.ListingAcceptType))))
                @Html.LabelFor(m => m.AutoAcceptMax)
                @Html.TextBoxFor(m => m.AutoAcceptMax)
                @Html.ValidationMessageFor(m => m.AutoAcceptMax)
            </li>
               *@ 
        </ol>
            </div>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Cancel", "Index", "Listing")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
